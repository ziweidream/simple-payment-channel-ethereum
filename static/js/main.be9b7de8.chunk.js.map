{"version":3,"sources":["ethereum/web3.js","ethereum/simplePayment.js","components/header.js","components/signMessage.js","components/verifyMessage.js","components/close.js","components/claimTimeout.js","App.js","serviceWorker.js","index.js"],"names":["web3","Web3","window","currentProvider","abi","require","simplePayment","eth","Contract","HeaderPayment","react_default","a","createElement","Header","as","color","className","Subheader","SignMessage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","constructPaymentMessage","contractAddress","amount","soliditySHA3","signMessage","message","callback","personal","sign","toString","err","result","console","log","alert","signPayment","onSubmit","event","preventDefault","setState","loading","errorMessage","state","_this2","Form","error","Field","Input","value","onChange","target","Message","header","content","Button","positive","Component","util","VerifyMessage","prefixed","hash","recoverSigner","signature","split","fromRpcSig","publicKey","ecrecover","v","r","s","pubToAddress","isValidSignature","expectedSigner","toLowerCase","stripHexPrefix","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","Group","widths","fluid","label","Close","accounts","getAccounts","sent","methods","close","send","from","t0","ClaimTimeout","App","extendTime","Number","newExpiration","expirationTime","extend","sender","recipient","expiration","Date","style","backgroundColor","Container","width","textAlign","Card","Content","Description","Icon","name","extra","inline","basic","floated","size","Label","itemsPerRow","components_close","claimTimeout","verifyMessage","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be9b7de8.chunk.js","sourcesContent":["import Web3 from 'web3'\n\nconst web3 = new Web3(window.web3.currentProvider)\n\nexport default web3","import web3 from './web3'\nconst address = '0x097Ad6F78Bb483fE2D45B19e1560731E9A465547'\nconst abi = require('./build/SimplePaymentChannel.json')\n\nexport default new web3.eth.Contract(abi, address)","import React from 'react'\nimport { Header, Icon } from 'semantic-ui-react'\n\nconst HeaderPayment = () => (\n  <Header as='h1' color='green'>\n    Simple Payment Channel\n    <div> <i className=\"fab fa-ethereum\"></i></div>\n    <Header.Subheader>On Ethereum </Header.Subheader>\n  </Header>\n)\n\nexport default HeaderPayment","import React, {\n    Component\n} from 'react';\nimport {\n    Form,\n    Button,\n    Input,\n    Message\n} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3'\n\n//const util = require('ethereumjs-util')\nconst abi = require('ethereumjs-abi')\n\nlet sig;\n\nclass SignMessage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {            \n            amount: '',\n            contractAddress: '',\n            result: '',    \n            errorMessage: ''    \n        }\n    }\n\n    constructPaymentMessage = (contractAddress, amount) => {\n        return abi.soliditySHA3(\n            [\"address\", \"uint256\"],\n            [contractAddress, amount]\n        );\n    }\n\n    signMessage = (message, callback) => {\n        web3.eth.personal.sign(\n            \"0x\" + message.toString(\"hex\"),\n            '0x12241e7E6595A796b058dc01f291f9B50df8C9B2',\n            function (err, result) {                \n                console.log(err, result)\n                window.alert('Signature: \\n' + result)                     \n            }\n        );\n    }\n\n    // contractAddress is used to prevent cross-contract replay attacks.\n    // amount, in wei, specifies how much Ether should be sent.\n    signPayment = (contractAddress, amount) => {\n        var message = this.constructPaymentMessage(contractAddress, amount);\n        this.signMessage(message);\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            loading: true,\n            errorMessage: ''\n        });\n\n        try {\n            this.signPayment(this.state.contractAddress, this.state.amount)\n        } catch (err) {\n            this.setState({\n                errorMessage: err.message\n            });\n        }\n\n        this.setState({\n            loading: false\n        });\n\n    }    \n    \n    render() {      \n        return (\n            <div>\n                <Form \n                  onSubmit={this.onSubmit}\n                  error={!!this.state.errorMessage}>\n                \n                    <Form.Field>\n                        <label> Contract address </label>\n                        <Input                         \n                            value={\n                                this.state.contractAddress\n                            }\n                            onChange={\n                                event => this.setState({ contractAddress: event.target.value })\n                            }\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label> Amount (in ether) </label>\n                        <Input\n                            \n                            value={this.state.amount}\n                            onChange={event => this.setState({ amount: event.target.value })}\n                        />\n                    </Form.Field>    \n                    <Message error\n                        header=\"Oops!\"\n                        content={this.state.errorMessage}\n                    />    \n                    <Button loading={this.state.loading} positive > Sign and send! </Button>\n                  \n                </Form>                              \n            </div>\n        );\n    }\n}\n\nexport default SignMessage;","import React, {\n    Component\n} from 'react';\nimport {\n    Form,\n    Button,  \n    Message\n} from 'semantic-ui-react';\n\nconst util = require('ethereumjs-util')\nconst abi = require('ethereumjs-abi')\n\nclass VerifyMessage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            amount: '',\n            contractAddress: '',\n            signature: '',\n            expectedSigner: '',\n            errorMessage: ''\n        }\n    }\n\n    prefixed = (hash) => {\n        return abi.soliditySHA3(\n            [\"string\", \"bytes32\"],\n            [\"\\x19Ethereum Signed Message:\\n32\", hash]\n        );\n    }\n\n    constructPaymentMessage = (contractAddress, amount) => {\n        return abi.soliditySHA3(\n            [\"address\", \"uint256\"],\n            [contractAddress, amount]\n        );\n    }\n\n    recoverSigner = (message, signature) => {\n        var split = util.fromRpcSig(signature);\n        var publicKey = util.ecrecover(message, split.v, split.r, split.s);\n        var signer = util.pubToAddress(publicKey).toString(\"hex\");\n        return signer;\n    }\n\n    isValidSignature = (contractAddress, amount, signature, expectedSigner) => {\n        var message = this.prefixed(this.constructPaymentMessage(contractAddress, amount));\n        var signer = this.recoverSigner(message, signature);\n        return signer.toLowerCase() ==\n            util.stripHexPrefix(expectedSigner).toLowerCase();\n    }\n\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n        this.setState({\n            loading: true,\n            errorMessage: ''\n        });\n\n        try {\n            if (this.isValidSignature(this.state.contractAddress, this.state.amount, this.state.signature, this.state.expectedSigner)) {\n                window.alert('Message Verified!  \\n' + 'Amount: ' + this.state.amount + ' ether')\n            }\n        } catch (err) {\n            this.setState({\n                errorMessage: err.message\n            });\n        }\n\n        this.setState({\n            loading: false\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Form\n                    onSubmit={this.onSubmit}\n                    error={\n                        !!this.state.errorMessage\n                    }\n                >\n                    <Form.Group widths='equal'>\n                        <Form.Input fluid\n                            label='Contract Address'\n                            value={\n                                this.state.contractAddress\n                            }\n                            onChange={\n                                event => this.setState({ contractAddress: event.target.value })\n                            }\n                        />\n                        <Form.Input fluid\n                            label='Amount (in ether)'\n                            value={this.state.amount}\n                            onChange={event => this.setState({ amount: event.target.value })}\n                        />\n                    </Form.Group>\n\n                    <Form.Group widths='equal'>\n                        <Form.Input fluid\n                            label='Signature'\n                            value={this.state.signature}\n                            onChange={event => this.setState({ signature: event.target.value })}\n                        />\n                        <Form.Input fluid\n                            label='Expected Signer'\n                            value={this.state.expectedSigner}\n                            onChange={event => this.setState({ expectedSigner: event.target.value })}\n                        />\n                    </Form.Group>\n\n                    <Message error\n                        header=\"Oops!\"\n                        content={this.state.errorMessage}\n                    />\n                    <Button loading={this.state.loading} positive > Verify Message! </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default VerifyMessage;","import React, {\n    Component\n} from 'react';\nimport {\n    Form,\n    Button,\n    Input,\n    Message\n} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3'\nimport simplePayment from '../ethereum/simplePayment'\n\n\nclass Close extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            amount: '',\n            signature: '',\n            errorMessage: '',\n            loading: false\n        }\n    }\n\n    onSubmit = async event => {\n        event.preventDefault()\n\n        this.setState({ loading: true, errorMessage: '' })\n\n        try {\n            const accounts = await web3.eth.getAccounts()\n            await simplePayment.methods.close(this.state.amount, this.state.signature).send({\n                from: accounts[0]\n            })\n        } catch (err) {\n            this.setState({ errorMessage: err.message })\n        }\n        this.setState({ loading: false })\n    }\n\n    render() {\n\n        return (\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                <Form.Group widths='equal'>\n                    <Form.Input fluid\n                        label='Amount (in ether)'\n                        value={\n                            this.state.amount\n                        }\n                        onChange={\n                            event => this.setState({ amount: event.target.value })\n                        }\n                    />\n                    <Form.Input fluid\n                        label='Signature'\n                        value={this.state.signature}\n                        onChange={event => this.setState({ signature: event.target.value })}\n                    />\n                </Form.Group>\n                <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                <Button loading={this.state.loading} positive > Close (recipient only) </Button>\n            </Form>\n        );\n    }\n}\n\nexport default Close","import React, {\n    Component\n} from 'react';\nimport {\n    Form,\n    Button,\n    Input,\n    Message\n} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3'\nimport simplePayment from '../ethereum/simplePayment'\n\n\nclass ClaimTimeout extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {          \n            errorMessage: '',\n            loading: false\n        }\n    }\n\n\n    onSubmit = async event => {\n        event.preventDefault()\n\n        this.setState({ loading: true, errorMessage: '' })\n\n        try {\n            const accounts = await web3.eth.getAccounts()\n            await simplePayment.methods.ClaimTimeout().send({\n                from: accounts[0]\n            })\n        } catch (err) {\n            this.setState({ errorMessage: err.message })\n        }\n        this.setState({ loading: false })\n    }\n\n    render() {\n\n        return (\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                \n                <Message error header=\"Oops!\" content={this.state.errorMessage} />\n\n                <Button loading={this.state.loading} positive > Claim Timeout (sender only) </Button>\n            </Form>           \n        );\n    }\n}\n\nexport default ClaimTimeout","import React, {\n    Component\n} from 'react';\nimport {\n    Container,\n    Card,\n    Icon,\n    Form,\n    Label,\n    Button,\n    Input,\n    Message\n} from 'semantic-ui-react';\nimport web3 from './ethereum/web3'\nimport simplePayment from './ethereum/simplePayment'\nimport HeaderPayment from './components/header'\nimport SignMessage from './components/signMessage'\nimport VerifyMessage from './components/verifyMessage'\nimport Close from './components/close'\nimport ClaimTimeout from './components/claimTimeout'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            sender: '',\n            recipient: '',\n            expiration: ''\n        }\n    }\n\n    async componentDidMount() {\n        const sender = await simplePayment.methods.sender().call()\n        const recipient = await simplePayment.methods.recipient().call()\n        const expirationTime = await simplePayment.methods.expiration().call()\n        const expiration = (new Date(expirationTime * 1000)).toString();\n\n        this.setState({\n            sender,\n            recipient,\n            expiration,\n            expirationTime,\n            newExpiration: '',\n            errorMessage: '',\n            loading: false\n        })\n    }\n\n    onSubmit = async event => {\n        event.preventDefault()\n\n        this.setState({ loading: true, errorMessage: '' })\n\n        try {\n            const accounts = await web3.eth.getAccounts()\n            const extendTime = Number(this.state.newExpiration) + Number(this.state.expirationTime)           \n            await simplePayment.methods.extend(extendTime).send({\n                from: accounts[0]\n            })\n        } catch (err) {\n            this.setState({ errorMessage: err.message })\n        }\n        this.setState({ loading: false })\n    }\n\n    render() {\n        return (\n            <div style={{backgroundColor: '#d9d9d9'}}>\n            <Container style={{ width: '68%', textAlign: 'center'}}>\n                <HeaderPayment />\n\n                <Card color='green' fluid>\n                    <Card.Content>\n                        <Card.Description>\n                            Sender: {this.state.sender}\n                        </Card.Description>\n                        <Card.Description>\n                            Recipient: {this.state.recipient}\n                        </Card.Description>\n                        <Card.Description>\n                            <Icon name='hourglass half' />\n                            Expiration date: {this.state.expiration}\n                        </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra >\n                        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                            <Form.Field inline>\n                                <Button basic floated='right' color='green' size='small' loading={this.state.loading} > Extend</Button>\n                                <label>Extend Expiration (sender only)</label>\n                                <Input\n                                    value={this.state.newExpiration}\n                                    onChange={\n                                        event => this.setState({ newExpiration: event.target.value })\n                                    }\n                                />\n                                <Label>seconds</Label>\n                            </Form.Field>\n                            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                        </Form>\n                    </Card.Content>\n                </Card>\n\n                <Card.Group itemsPerRow={2}>\n                    <Card color='green'>\n                        <Card.Content>\n                            <Card.Header>Close (recipient only)</Card.Header>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <Close />\n                        </Card.Content>\n                    </Card>\n\n                    <Card color='green'>\n                        <Card.Content>\n                            <Card.Header>Claim Timeout (sender only)</Card.Header>\n                            <Card.Description> <i className=\"far fa-calendar-times fa-2x\"></i></Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <ClaimTimeout />\n                        </Card.Content>\n                    </Card>\n                </Card.Group>\n\n                <Card.Group itemsPerRow={2}>\n                    <Card color=\"green\">\n                        <Card.Content>\n                            <Card.Header>Sign Message</Card.Header>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <SignMessage />\n                        </Card.Content>\n                    </Card>\n\n                    <Card color='green'>\n                        <Card.Content>\n                            <Card.Header>Verify Message</Card.Header>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <VerifyMessage />\n                        </Card.Content>\n                    </Card>\n                </Card.Group>\n            </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}